<chapter id="repmgr-node-rejoin" xreflabel="repmgr node rejoin">
  <indexterm>
    <primary>repmgr node rejoin</primary>
  </indexterm>
  <title>repmgr node rejoin</title>
  <para>
   Enables a dormant (stopped) node to be rejoined to the replication cluster.
  </para>
  <note>
   <simpara>
     Currently <command>repmgr node rejoin</command> can only be used to attach
     a standby to the current primary, not another standby.
   </simpara>
  </note>
  <para>
    This can optionally use <command>pg_rewind</command> to re-integrate a node which has diverged
    from the rest of the cluster, typically a failed primary.
  </para>
  <para>
    The node must have been shut down cleanly; if this was not the case, it will
    need to be manually started (remove any existing <filename>recovery.conf</filename> file) until
    it has reached a consistent recovery point, then shut down cleanly.
  </para>
  <para>
    Usage:
    <programlisting>
      repmgr node rejoin -d '$conninfo'</programlisting>

    where <literal>$conninfo</literal> is the conninfo string of any reachable node in the cluster.
    <filename>repmgr.conf</filename> for the stopped node *must* be supplied explicitly if not
    otherwise available.
  </para>
  <para>
    <command>repmgr node rejoin</command> can optionally use <command>pg_rewind</command> to re-integrate a
    node which has diverged from the rest of the cluster, typically a failed primary.
    <command>pg_rewind</command> is available in PostgreSQL 9.5 and later.
  </para>
  <note>
    <para>
      <command>pg_rewind</command> *requires* that either <varname>wal_log_hints</varname> is enabled, or that
      data checksums were enabled when the cluster was initialized. See the
      <ulink url="https://www.postgresql.org/docs/current/static/app-pgrewind.html"><command>pg_rewind</command> documentation</ulink> for details.

    </para>
  </note>
</chapter>
